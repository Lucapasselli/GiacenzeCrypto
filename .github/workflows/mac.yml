name: MacOS

env:
  PROJECT_NAME: Giacenze_Crypto
  JAVA_VERSION: 21
  BUILD_DIR: build

on:
  workflow_dispatch:

jobs:         
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup GraalVM on macOS
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          
      - name: Install Python and Pillow
        run: |
          python3 -m pip install --upgrade pip
          pip install pillow

      - name: Convert logo.png to .icns
        run: |
          mkdir icon.iconset
          python3 <<EOF
          from PIL import Image
          import os

          img = Image.open("logo.png").convert("RGBA")
          sizes = [
              (16, False), (16, True),
              (32, False), (32, True),
              (128, False), (128, True),
              (256, False), (256, True),
              (512, False), (512, True),
              (1024, False)
          ]

          os.makedirs("icon.iconset", exist_ok=True)

          for size, retina in sizes:
              scale = 2 if retina else 1
              final_size = size * scale
              resized = img.resize((final_size, final_size), Image.LANCZOS)
              suffix = f"{size}x{size}{'@2x' if retina else ''}"
              resized.save(f"icon.iconset/icon_{suffix}.png")
          EOF

          iconutil -c icns icon.iconset -o logo.icns
          
      - name: Estrai versione dal pom.xml
        id: get-version
        run: |
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            echo "VERSIONE=$VERSION" >> $GITHUB_ENV
          
      - name: Build JAR with Maven
        run: mvn clean package -DskipTests

      - name: Prepare input directory for jpackage
        run: |
          mkdir -p build/Immagini
          cp -r Immagini/* build/Immagini/
          cp logo.png build/
          cp GestitiCoincap.csv build/
          cp target/Giacenze_Crypto-${VERSIONE}-jar-with-dependencies.jar build/Giacenze_Crypto.jar

      - name: Build macOS app-image
        run: |
          jpackage \
            --type app-image \
            --input build \
            --dest out/macos \
            --name ${{ env.PROJECT_NAME }} \
            --main-jar Giacenze_Crypto.jar \
            --main-class com.giacenzecrypto.giacenze_crypto.Giacenze_Crypto \
            --arguments "--risorse ../app/" \
            --icon logo.icns \
            --app-version ${{ env.VERSIONE }} \
            --vendor Luca

      - name: Debug macOS output
        run: ls -R out/macos
            
      - name: Upload macOS app-image
        uses: actions/upload-artifact@v4
        with:
          name: GiacenzeCrypto_${{ env.VERSIONE }}_Beta_Portable_MacOS
          path: out/macos/${{ env.PROJECT_NAME }}.app
