/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package giacenze_crypto.com;

import static giacenze_crypto.com.Calcoli.MappaConversioneAddressEUR;
import static giacenze_crypto.com.Calcoli.MappaConversioneAddressEURtemp;
import static giacenze_crypto.com.Calcoli.MappaConversioneUSDEUR;
import static giacenze_crypto.com.Calcoli.MappaWallets;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author luca.passelli
 */


public class GestioneWallets extends javax.swing.JDialog {

    /**
     * Creates new form GestioneWallets
     */
    public GestioneWallets() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Bottone_InserisciWallet = new javax.swing.JButton();
        Bottone_RimuoviWallet = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Label_IndirizzoWallet = new javax.swing.JLabel();
        Label_Rete = new javax.swing.JLabel();
        TextField_IndirizzoWallet = new javax.swing.JTextField();
        ComboBox_Rete = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Bottone_InserisciWallet.setText("Inserisci Wallet");
        Bottone_InserisciWallet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bottone_InserisciWalletActionPerformed(evt);
            }
        });

        Bottone_RimuoviWallet.setText("Rimuovi Wallet");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Indirizo Wallet", "Rete"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(600);
        }

        Label_IndirizzoWallet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Label_IndirizzoWallet.setText("Indirizzo Wallet :");

        Label_Rete.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Label_Rete.setText("Rete :");

        ComboBox_Rete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- nessuna selezione ---", "Binance Smart Chain (BSC)" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 917, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Label_Rete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboBox_Rete, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(Bottone_InserisciWallet, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Label_IndirizzoWallet)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TextField_IndirizzoWallet, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Bottone_RimuoviWallet))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_IndirizzoWallet)
                    .addComponent(TextField_IndirizzoWallet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Rete)
                    .addComponent(ComboBox_Rete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bottone_InserisciWallet)
                    .addComponent(Bottone_RimuoviWallet))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bottone_InserisciWalletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bottone_InserisciWalletActionPerformed
        // TODO add your handling code here:
        String Wallet=TextField_IndirizzoWallet.getText().trim();
        String Rete=ComboBox_Rete.getItemAt(ComboBox_Rete.getSelectedIndex());
        if (Rete.split("\\(").length>1){
            Rete=Rete.split("\\(")[1].trim().substring(0, Rete.split("\\(")[1].length()-1);
        } else {
        }
        if (Wallet.length()!=42 || !Wallet.substring(1, 2).equalsIgnoreCase("x")){
            //non è un indirizzo di wallet valido
            JOptionPane.showConfirmDialog(this, "Attenzione! \nIl Wallet specificato non è valido",
                            "Wallet non Valido",JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,null);
        }else if(ComboBox_Rete.getSelectedIndex()==0){
            //non è valido la selezione della combobox
            JOptionPane.showConfirmDialog(this, "Attenzione! \nDevi selezionare una rete valida",
                            "Rete non valida",JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,null);            
        }else{
            //Se arrivo qui i dati sono corretti adesso devo
            //1 - Controllare se non esiste già un wallet della stessa rte con lo stesso indirizzo
            if (MappaWallets.get(Wallet+"_"+Rete)!=null){
                JOptionPane.showConfirmDialog(this, "Attenzione! \nWallet gia' prensente nella lista",
                            "Wallet gia' presente",JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,null);  
            }
            //2 - Inserisco il wallet nella lista
            else{
                MappaWallets.put(Wallet+"_"+Rete, Wallet+";"+Rete);
                ScriviFileWallets();
                //CompilaTabella
            }
        }
    }//GEN-LAST:event_Bottone_InserisciWalletActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        LeggiFileWallets();
        //CompilaTabella;
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestioneWallets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestioneWallets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestioneWallets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestioneWallets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestioneWallets().setVisible(true);
            }
        });
    }

    
    public static void LeggiFileWallets(){
         try {
             //Il file wallet è così composto
             //IndirizzoWallet;Rete;
             //la mappa che andrò a generare invece sarà
             //key:IndirizzoWallet_Rete
             //Dati:IndirizzoWallet;Rete
             File file=new File ("Wallets.db");
             if (!file.exists()) file.createNewFile();
             String riga;
             try (FileReader fire = new FileReader("Wallets.db");
                     BufferedReader bure = new BufferedReader(fire);)
             {
                 while((riga=bure.readLine())!=null)
                 {
                     String rigaSplittata[]=riga.split(";");
                     if (rigaSplittata.length==2)
                     {
                         MappaWallets.put(rigaSplittata[0]+"_"+rigaSplittata[1], riga);
                     }
                 }
                 bure.close();
                 fire.close();        
             } catch (FileNotFoundException ex) {
                 Logger.getLogger(Calcoli.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IOException ex) {
                 Logger.getLogger(Calcoli.class.getName()).log(Level.SEVERE, null, ex);
             }

         } catch (IOException ex) {        
            Logger.getLogger(Calcoli.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    
    static void ScriviFileWallets() {
   try { 
       FileWriter w=new FileWriter("Wallets.db");
       BufferedWriter b=new BufferedWriter (w);
       for (String k:MappaWallets.values()){
           b.write(k+"\n");
       }
       b.close();
       w.close();

    }catch (IOException ex) {
                 //  Logger.getLogger(AWS.class.getName()).log(Level.SEVERE, null, ex);
               }
   
   }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bottone_InserisciWallet;
    private javax.swing.JButton Bottone_RimuoviWallet;
    private javax.swing.JComboBox<String> ComboBox_Rete;
    private javax.swing.JLabel Label_IndirizzoWallet;
    private javax.swing.JLabel Label_Rete;
    private javax.swing.JTextField TextField_IndirizzoWallet;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
