/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package giacenze_crypto.com;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luca.passelli
 */
public class Gestione_Errori extends javax.swing.JDialog {

    /**
     * Creates new form Gestione_Errori
     */
    public Gestione_Errori() {
        setModalityType(ModalityType.APPLICATION_MODAL);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label_Titolo_TabellaErrori = new javax.swing.JLabel();
        ScrollPane_TabellaErrori = new javax.swing.JScrollPane();
        TabellaErrori = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Label_Titolo_TabellaErrori.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_Titolo_TabellaErrori.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_Titolo_TabellaErrori.setText("Tabella movimenti con Errori");

        TabellaErrori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Descr.Transazione", "Valuta", "Valore", "A Valuta", "A Valore", "Valuta Nativa", "Valore Nativo", "Valore Nativo in USD", "Tipo Transazione", "Tipo Errore"
            }
        ));
        ScrollPane_TabellaErrori.setViewportView(TabellaErrori);
        if (TabellaErrori.getColumnModel().getColumnCount() > 0) {
            TabellaErrori.getColumnModel().getColumn(2).setPreferredWidth(50);
            TabellaErrori.getColumnModel().getColumn(2).setMaxWidth(50);
            TabellaErrori.getColumnModel().getColumn(4).setPreferredWidth(50);
            TabellaErrori.getColumnModel().getColumn(4).setMaxWidth(50);
            TabellaErrori.getColumnModel().getColumn(6).setPreferredWidth(50);
            TabellaErrori.getColumnModel().getColumn(6).setMaxWidth(50);
        }

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Legenda Tipi Errore :\n1 - Movimento non in Euro, non viene contabilizzato\n2 - Movimento sconosciuto, bisogna indicare se il movimento è in uscita o in ingresso\n     (Se non viene fatto non verrà considerato nel calcolo delle giacenze media e nei saldi iniziali/finali)\n     Selezionare la riga e utilizzare il bottone a destra per indicare il tipo di movimento.");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Indicare Tipo Movimento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Titolo_TabellaErrori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ScrollPane_TabellaErrori)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_Titolo_TabellaErrori)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPane_TabellaErrori, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //System.out.println(TabellaErrori.getSelectedRow());//-1 nessuna riga selezionata
        if (TabellaErrori.getSelectedRow()!=-1){
            if (TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 10).toString().equalsIgnoreCase("2")){
            String Messaggio="Selezione il tipo di movimento per la transazione denominata : \n";
            Messaggio=Messaggio+TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9)+"\n";
            //int risposta=JOptionPane.showConfirmDialog(null,Messaggio, "Movimento in ingresso?", JOptionPane.YES_NO_CANCEL_OPTION);
            int risposta=JOptionPane.showOptionDialog(null, Messaggio, "Seleziona Tipologia", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Movimento in Ingresso", "Movimento in Uscita","Annulla"}, "okay");
            //yes=0;no=1;cancel=2;
            if (risposta==0){
                try 
                { 
                    FileWriter w=new FileWriter(CDC_Grafica.CDC_FiatWallet_FileTipiMovimentiDB);
                    BufferedWriter b=new BufferedWriter (w);
                    for (String value : CDC_Grafica.CDC_FiatWallet_MappaTipiMovimenti.values()) 
                    {
                        b.write(value+"\n");
                    }
                    String Nuovariga=TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9)+";+;Personalizzato;"+TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9);
                    b.write(Nuovariga+"\n");
                    //CDC_Grafica.CDC_FiatWallet_MappaTipiMovimenti.put(TabellaErrori.getModel().getValueAt(0, 9).toString(), Nuovariga);
                    b.close();
                    w.close();
                }catch (IOException ex) 
                {

                }
                
                JOptionPane.showMessageDialog(null,"Impostato "+TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9)+" come movimento in ingresso", "Tipo movimento impostato", JOptionPane.INFORMATION_MESSAGE);
                //CDC_Grafica.CDC_FiatWallet_Funzione_ImportaWallet(CDC_Grafica.CDC_FiatWallet_FileDB,CDC_Grafica.CDC_FiatWallet_FileTipiMovimentiDB);
                this.dispose();
            }
            if (risposta==1){
                //è un movimento in uscita lo tratto come tale
                try 
                { 
                    FileWriter w=new FileWriter(CDC_Grafica.CDC_FiatWallet_FileTipiMovimentiDB);
                    BufferedWriter b=new BufferedWriter (w);
                    for (String value : CDC_Grafica.CDC_FiatWallet_MappaTipiMovimenti.values()) 
                    {
                        b.write(value+"\n");
                    }
                    String Nuovariga=TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9)+";-;Personalizzato;"+TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9);
                    b.write(Nuovariga+"\n");
                    //CDC_Grafica.CDC_FiatWallet_MappaTipiMovimenti.put(TabellaErrori.getModel().getValueAt(0, 9).toString(), Nuovariga);
                    b.close();
                    w.close();
                }catch (IOException ex) 
                {

                }
                JOptionPane.showMessageDialog(null,"Impostato "+TabellaErrori.getModel().getValueAt(TabellaErrori.getSelectedRow(), 9)+" come movimento in uscita", "Tipo movimento impostato", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }
            if (risposta==2){
                //non ho dato nessuna risposta, non faccio nulla
            }
            }
            else
             {
                JOptionPane.showMessageDialog(null,"Riga senza valuta in Euro, non verrà considerata", "Attenzione", JOptionPane.OK_OPTION); 
             }   
            }
        else
            {
               JOptionPane.showMessageDialog(null,"Attenzione, devi selezionare almeno una riga.", "Attenzione", JOptionPane.OK_OPTION); 
            }
       // System.out.println(a);//yse 0, no 1, cancel 2
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestione_Errori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestione_Errori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestione_Errori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestione_Errori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gestione_Errori().setVisible(true);
            }
        });
    }
    
    
    
    public  void CompilaTabellaErrori(Map<String, String> Mappa){
        DefaultTableModel ModelloTabellaErrori = (DefaultTableModel) TabellaErrori.getModel();
        PulisciTabella(ModelloTabellaErrori);
        for (String value : Mappa.values()) {
            String[] riga=value.split(",");
            if (riga[10].equalsIgnoreCase("")&&riga.length==12)
                {
                    //sui nuovi csv è stata aggiunta una colonna vuota,la gestisco in questo modo
                    //copiando il valore successivo in quello vuoto
                    riga[10]=riga[11];
                }
            ModelloTabellaErrori.addRow(riga);
            
        }
        
    }
    
    
         public static void PulisciTabella(DefaultTableModel modello) {
           int z=modello.getRowCount();
        // System.out.println(modelProblemi.getRowCount());
         while (z!=0){
             modello.removeRow(0);
             z=modello.getRowCount();
         }
         
  }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label_Titolo_TabellaErrori;
    private javax.swing.JScrollPane ScrollPane_TabellaErrori;
    private javax.swing.JTable TabellaErrori;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
